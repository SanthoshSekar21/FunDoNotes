info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-16T18:33:47.245Z"}
info: Connected to the database. {"timestamp":"2024-10-16T18:33:47.553Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-16T18:36:40.367Z"}
info: Connected to the database. {"timestamp":"2024-10-16T18:36:40.474Z"}
error: 
      status - 11000
      message - E11000 duplicate key error collection: FunDoNotes.users index: Email_1 dup key: { Email: "santhosh22sekar@gmail.com" } 
      url - /api/v1/users/register 
      method - POST 
      IP - ::1
     {"timestamp":"2024-10-16T18:36:44.904Z"}
error: 
    status - 500 
    message - RangeError: Invalid status code: 11000
    at ServerResponse.writeHead (node:_http_server:352:11)
    at ServerResponse.writeHead (E:\FunDoNotes\FunDoNotes\node_modules\on-headers\index.js:44:26)
    at ServerResponse._implicitHeader (node:_http_server:338:8)
    at write_ (node:_http_outgoing:945:9)
    at ServerResponse.end (node:_http_outgoing:1056:5)
    at ServerResponse.send (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\response.js:232:10)
    at ServerResponse.json (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\response.js:278:15)
    at ErrorMiddleware.appErrorHandler (E:\FunDoNotes\FunDoNotes\src\middlewares\error.middleware.ts:57:28)
    at Layer.handle_error (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\layer.js:71:5)
    at trim_prefix (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:326:13)
    at E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:286:9
    at Function.process_params (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:346:12)
    at Immediate.next (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:280:10)
    at Immediate._onImmediate (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:646:15)
    at processImmediate (node:internal/timers:485:21) 
    url - /api/v1/users/register 
    method - POST 
    IP - ::1
   {"timestamp":"2024-10-16T18:36:44.937Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-16T18:47:19.511Z"}
info: Connected to the database. {"timestamp":"2024-10-16T18:47:19.644Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-16T19:12:29.145Z"}
info: Connected to the database. {"timestamp":"2024-10-16T19:12:29.370Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-16T19:22:11.201Z"}
info: Connected to the database. {"timestamp":"2024-10-16T19:22:11.507Z"}
error: 
    status - 500 
    message - TypeError: this.UserService.existingUser is not a function
    at UserController.<anonymous> (E:\FunDoNotes\FunDoNotes\src\controllers\user.controller.ts:90:43)
    at Generator.next (<anonymous>)
    at E:\FunDoNotes\FunDoNotes\src\controllers\user.controller.ts:8:71
    at new Promise (<anonymous>)
    at __awaiter (E:\FunDoNotes\FunDoNotes\src\controllers\user.controller.ts:4:12)
    at UserController.existingUser (E:\FunDoNotes\FunDoNotes\src\controllers\user.controller.ts:88:21)
    at Layer.handle [as handle_request] (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\layer.js:95:5)
    at next (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\route.js:149:13)
    at UserValidator.existingUser (E:\FunDoNotes\FunDoNotes\src\validators\user.validator.ts:28:3)
    at Layer.handle [as handle_request] (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\layer.js:95:5)
    at next (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\route.js:149:13)
    at Route.dispatch (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\route.js:119:3)
    at Layer.handle [as handle_request] (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\layer.js:95:5)
    at E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:284:15
    at Function.process_params (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:346:12)
    at next (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:280:10) 
    url - /api/v1/users/signin 
    method - POST 
    IP - ::1
   {"timestamp":"2024-10-16T19:23:34.013Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-16T19:29:24.096Z"}
info: Connected to the database. {"timestamp":"2024-10-16T19:29:24.198Z"}
error: 
    status - 500 
    message - TypeError: this.UserService.existingUser is not a function
    at UserController.<anonymous> (E:\FunDoNotes\FunDoNotes\src\controllers\user.controller.ts:90:43)
    at Generator.next (<anonymous>)
    at E:\FunDoNotes\FunDoNotes\src\controllers\user.controller.ts:8:71
    at new Promise (<anonymous>)
    at __awaiter (E:\FunDoNotes\FunDoNotes\src\controllers\user.controller.ts:4:12)
    at UserController.existingUser (E:\FunDoNotes\FunDoNotes\src\controllers\user.controller.ts:88:21)
    at Layer.handle [as handle_request] (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\layer.js:95:5)
    at next (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\route.js:149:13)
    at UserValidator.existingUser (E:\FunDoNotes\FunDoNotes\src\validators\user.validator.ts:28:3)
    at Layer.handle [as handle_request] (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\layer.js:95:5)
    at next (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\route.js:149:13)
    at Route.dispatch (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\route.js:119:3)
    at Layer.handle [as handle_request] (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\layer.js:95:5)
    at E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:284:15
    at Function.process_params (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:346:12)
    at next (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:280:10) 
    url - /api/v1/users/signin 
    method - POST 
    IP - ::1
   {"timestamp":"2024-10-16T19:29:31.264Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-16T19:33:45.971Z"}
info: Connected to the database. {"timestamp":"2024-10-16T19:33:46.067Z"}
error: 
    status - 500 
    message - TypeError: this.UserService.existingUser is not a function
    at UserController.<anonymous> (E:\FunDoNotes\FunDoNotes\src\controllers\user.controller.ts:90:43)
    at Generator.next (<anonymous>)
    at E:\FunDoNotes\FunDoNotes\src\controllers\user.controller.ts:8:71
    at new Promise (<anonymous>)
    at __awaiter (E:\FunDoNotes\FunDoNotes\src\controllers\user.controller.ts:4:12)
    at UserController.existingUser (E:\FunDoNotes\FunDoNotes\src\controllers\user.controller.ts:88:21)
    at Layer.handle [as handle_request] (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\layer.js:95:5)
    at next (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\route.js:149:13)
    at UserValidator.existingUser (E:\FunDoNotes\FunDoNotes\src\validators\user.validator.ts:28:3)
    at Layer.handle [as handle_request] (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\layer.js:95:5)
    at next (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\route.js:149:13)
    at Route.dispatch (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\route.js:119:3)
    at Layer.handle [as handle_request] (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\layer.js:95:5)
    at E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:284:15
    at Function.process_params (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:346:12)
    at next (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:280:10) 
    url - /api/v1/users/signin 
    method - POST 
    IP - ::1
   {"timestamp":"2024-10-16T19:33:52.140Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-16T19:35:16.934Z"}
info: Connected to the database. {"timestamp":"2024-10-16T19:35:17.000Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-16T19:47:43.903Z"}
info: Connected to the database. {"timestamp":"2024-10-16T19:47:44.041Z"}
error: 
    status - 500 
    message - ReferenceError: Fristname is not defined
    at UserController.<anonymous> (E:\FunDoNotes\FunDoNotes\src\controllers\user.controller.ts:94:53)
    at Generator.next (<anonymous>)
    at fulfilled (E:\FunDoNotes\FunDoNotes\src\controllers\user.controller.ts:5:58)
    at processTicksAndRejections (node:internal/process/task_queues:95:5) 
    url - /api/v1/users/signin 
    method - POST 
    IP - ::1
   {"timestamp":"2024-10-16T19:47:55.908Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-16T20:00:39.993Z"}
info: Connected to the database. {"timestamp":"2024-10-16T20:00:40.192Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-16T20:16:08.499Z"}
info: Connected to the database. {"timestamp":"2024-10-16T20:16:09.057Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-17T05:04:54.502Z"}
info: Connected to the database. {"timestamp":"2024-10-17T05:04:54.958Z"}
error: 
    status - 500 
    message - ValidationError: "Firstname" is required 
    url - /api/v1/users/register 
    method - POST 
    IP - ::1
   {"timestamp":"2024-10-17T05:06:25.207Z"}
error: 
    status - 500 
    message - TypeError: this.UserService.findByEmail is not a function
    at UserController.<anonymous> (E:\FunDoNotes\FunDoNotes\src\controllers\user.controller.ts:68:51)
    at Generator.next (<anonymous>)
    at E:\FunDoNotes\FunDoNotes\src\controllers\user.controller.ts:8:71
    at new Promise (<anonymous>)
    at __awaiter (E:\FunDoNotes\FunDoNotes\src\controllers\user.controller.ts:4:12)
    at UserController.newUser (E:\FunDoNotes\FunDoNotes\src\controllers\user.controller.ts:66:21)
    at Layer.handle [as handle_request] (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\layer.js:95:5)
    at next (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\route.js:149:13)
    at UserValidator.newUser (E:\FunDoNotes\FunDoNotes\src\validators\user.validator.ts:16:5)
    at Layer.handle [as handle_request] (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\layer.js:95:5)
    at next (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\route.js:149:13)
    at Route.dispatch (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\route.js:119:3)
    at Layer.handle [as handle_request] (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\layer.js:95:5)
    at E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:284:15
    at Function.process_params (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:346:12)
    at next (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:280:10) 
    url - /api/v1/users/register 
    method - POST 
    IP - ::1
   {"timestamp":"2024-10-17T05:06:36.498Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-17T05:07:39.235Z"}
info: Connected to the database. {"timestamp":"2024-10-17T05:07:39.328Z"}
error: 
    status - 500 
    message - TypeError: this.UserService.findByEmail is not a function
    at UserController.<anonymous> (E:\FunDoNotes\FunDoNotes\src\controllers\user.controller.ts:68:51)
    at Generator.next (<anonymous>)
    at E:\FunDoNotes\FunDoNotes\src\controllers\user.controller.ts:8:71
    at new Promise (<anonymous>)
    at __awaiter (E:\FunDoNotes\FunDoNotes\src\controllers\user.controller.ts:4:12)
    at UserController.newUser (E:\FunDoNotes\FunDoNotes\src\controllers\user.controller.ts:66:21)
    at Layer.handle [as handle_request] (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\layer.js:95:5)
    at next (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\route.js:149:13)
    at UserValidator.newUser (E:\FunDoNotes\FunDoNotes\src\validators\user.validator.ts:16:5)
    at Layer.handle [as handle_request] (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\layer.js:95:5)
    at next (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\route.js:149:13)
    at Route.dispatch (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\route.js:119:3)
    at Layer.handle [as handle_request] (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\layer.js:95:5)
    at E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:284:15
    at Function.process_params (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:346:12)
    at next (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:280:10) 
    url - /api/v1/users/register 
    method - POST 
    IP - ::1
   {"timestamp":"2024-10-17T05:07:48.528Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-17T05:11:58.117Z"}
info: Connected to the database. {"timestamp":"2024-10-17T05:11:58.304Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-17T05:29:05.535Z"}
info: Connected to the database. {"timestamp":"2024-10-17T05:29:06.669Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-17T05:34:32.891Z"}
info: Connected to the database. {"timestamp":"2024-10-17T05:34:33.026Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-17T06:07:21.184Z"}
info: Connected to the database. {"timestamp":"2024-10-17T06:07:21.602Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-17T07:49:58.692Z"}
info: Connected to the database. {"timestamp":"2024-10-17T07:50:00.567Z"}
error: 
    status - 500 
    message - ValidationError: "Firstname" is required 
    url - /api/v1/users/register 
    method - POST 
    IP - ::1
   {"timestamp":"2024-10-17T07:50:49.360Z"}
error: 
      status - 11000
      message - E11000 duplicate key error collection: FunDoNotes.users index: Email_1 dup key: { Email: "michaelscott@gmail.com" } 
      url - /api/v1/users/register 
      method - POST 
      IP - ::1
     {"timestamp":"2024-10-17T07:50:59.018Z"}
error: 
    status - 500 
    message - RangeError: Invalid status code: 11000
    at ServerResponse.writeHead (node:_http_server:352:11)
    at ServerResponse.writeHead (E:\FunDoNotes\FunDoNotes\node_modules\on-headers\index.js:44:26)
    at ServerResponse._implicitHeader (node:_http_server:338:8)
    at write_ (node:_http_outgoing:945:9)
    at ServerResponse.end (node:_http_outgoing:1056:5)
    at ServerResponse.send (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\response.js:232:10)
    at ServerResponse.json (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\response.js:278:15)
    at ErrorMiddleware.appErrorHandler (E:\FunDoNotes\FunDoNotes\src\middlewares\error.middleware.ts:57:28)
    at Layer.handle_error (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\layer.js:71:5)
    at trim_prefix (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:326:13)
    at E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:286:9
    at Function.process_params (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:346:12)
    at Immediate.next (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:280:10)
    at Immediate._onImmediate (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:646:15)
    at processImmediate (node:internal/timers:485:21) 
    url - /api/v1/users/register 
    method - POST 
    IP - ::1
   {"timestamp":"2024-10-17T07:50:59.103Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-17T08:57:26.799Z"}
info: Connected to the database. {"timestamp":"2024-10-17T08:57:27.163Z"}
error: 
      status - 11000
      message - E11000 duplicate key error collection: FunDoNotes.users index: Email_1 dup key: { Email: "michaelscott@gmail.com" } 
      url - /api/v1/users/register 
      method - POST 
      IP - ::1
     {"timestamp":"2024-10-17T08:57:50.505Z"}
error: 
    status - 500 
    message - Error: Cannot set headers after they are sent to the client
    at ServerResponse.setHeader (node:_http_outgoing:659:11)
    at ServerResponse.header (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\response.js:794:10)
    at ServerResponse.send (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\response.js:174:12)
    at ServerResponse.json (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\response.js:278:15)
    at ErrorMiddleware.appErrorHandler (E:\FunDoNotes\FunDoNotes\src\middlewares\error.middleware.ts:57:28)
    at Layer.handle_error (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\layer.js:71:5)
    at trim_prefix (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:326:13)
    at E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:286:9
    at Function.process_params (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:346:12)
    at Immediate.next (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:280:10)
    at Immediate._onImmediate (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:646:15)
    at processImmediate (node:internal/timers:485:21) 
    url - /api/v1/users/register 
    method - POST 
    IP - ::1
   {"timestamp":"2024-10-17T08:57:50.616Z"}
error: 
      status - 11000
      message - E11000 duplicate key error collection: FunDoNotes.users index: Email_1 dup key: { Email: "michaelscott@gmail.com" } 
      url - /api/v1/users/register 
      method - POST 
      IP - ::1
     {"timestamp":"2024-10-17T08:58:51.698Z"}
error: 
    status - 500 
    message - Error: Cannot set headers after they are sent to the client
    at ServerResponse.setHeader (node:_http_outgoing:659:11)
    at ServerResponse.header (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\response.js:794:10)
    at ServerResponse.send (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\response.js:174:12)
    at ServerResponse.json (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\response.js:278:15)
    at ErrorMiddleware.appErrorHandler (E:\FunDoNotes\FunDoNotes\src\middlewares\error.middleware.ts:57:28)
    at Layer.handle_error (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\layer.js:71:5)
    at trim_prefix (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:326:13)
    at E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:286:9
    at Function.process_params (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:346:12)
    at Immediate.next (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:280:10)
    at Immediate._onImmediate (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:646:15)
    at processImmediate (node:internal/timers:485:21) 
    url - /api/v1/users/register 
    method - POST 
    IP - ::1
   {"timestamp":"2024-10-17T08:58:51.808Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-17T09:13:52.198Z"}
info: Connected to the database. {"timestamp":"2024-10-17T09:13:54.973Z"}
error: 
      status - 11000
      message - E11000 duplicate key error collection: FunDoNotes.users index: Email_1 dup key: { Email: "michaelscott@gmail.com" } 
      url - /api/v1/users/register 
      method - POST 
      IP - ::1
     {"timestamp":"2024-10-17T09:14:11.075Z"}
error: 
    status - 500 
    message - Error: Cannot set headers after they are sent to the client
    at ServerResponse.setHeader (node:_http_outgoing:659:11)
    at ServerResponse.header (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\response.js:794:10)
    at ServerResponse.send (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\response.js:174:12)
    at ServerResponse.json (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\response.js:278:15)
    at ErrorMiddleware.appErrorHandler (E:\FunDoNotes\FunDoNotes\src\middlewares\error.middleware.ts:57:28)
    at Layer.handle_error (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\layer.js:71:5)
    at trim_prefix (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:326:13)
    at E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:286:9
    at Function.process_params (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:346:12)
    at Immediate.next (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:280:10)
    at Immediate._onImmediate (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:646:15)
    at processImmediate (node:internal/timers:485:21) 
    url - /api/v1/users/register 
    method - POST 
    IP - ::1
   {"timestamp":"2024-10-17T09:14:11.342Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-17T09:14:40.066Z"}
info: Connected to the database. {"timestamp":"2024-10-17T09:14:40.154Z"}
error: 
      status - 11000
      message - E11000 duplicate key error collection: FunDoNotes.users index: Email_1 dup key: { Email: "michaelscott@gmail.com" } 
      url - /api/v1/users/register 
      method - POST 
      IP - ::1
     {"timestamp":"2024-10-17T09:14:44.336Z"}
error: 
    status - 500 
    message - Error: Cannot set headers after they are sent to the client
    at ServerResponse.setHeader (node:_http_outgoing:659:11)
    at ServerResponse.header (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\response.js:794:10)
    at ServerResponse.send (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\response.js:174:12)
    at ServerResponse.json (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\response.js:278:15)
    at ErrorMiddleware.appErrorHandler (E:\FunDoNotes\FunDoNotes\src\middlewares\error.middleware.ts:57:28)
    at Layer.handle_error (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\layer.js:71:5)
    at trim_prefix (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:326:13)
    at E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:286:9
    at Function.process_params (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:346:12)
    at Immediate.next (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:280:10)
    at Immediate._onImmediate (E:\FunDoNotes\FunDoNotes\node_modules\express\lib\router\index.js:646:15)
    at processImmediate (node:internal/timers:485:21) 
    url - /api/v1/users/register 
    method - POST 
    IP - ::1
   {"timestamp":"2024-10-17T09:14:44.352Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-17T09:18:29.567Z"}
info: Connected to the database. {"timestamp":"2024-10-17T09:18:29.661Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-17T09:20:25.248Z"}
info: Connected to the database. {"timestamp":"2024-10-17T09:20:25.346Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-17T09:58:52.924Z"}
info: Connected to the database. {"timestamp":"2024-10-17T09:58:53.375Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-17T09:59:45.623Z"}
info: Connected to the database. {"timestamp":"2024-10-17T09:59:45.715Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-17T10:01:04.874Z"}
info: Connected to the database. {"timestamp":"2024-10-17T10:01:04.979Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-17T10:05:07.099Z"}
info: Connected to the database. {"timestamp":"2024-10-17T10:05:07.211Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-17T10:07:12.546Z"}
info: Connected to the database. {"timestamp":"2024-10-17T10:07:12.627Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-17T10:08:32.184Z"}
info: Connected to the database. {"timestamp":"2024-10-17T10:08:32.289Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-17T10:11:02.521Z"}
info: Connected to the database. {"timestamp":"2024-10-17T10:11:02.612Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-17T10:11:58.709Z"}
info: Connected to the database. {"timestamp":"2024-10-17T10:11:58.919Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-17T10:13:48.147Z"}
info: Connected to the database. {"timestamp":"2024-10-17T10:13:48.245Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-17T10:16:10.483Z"}
info: Connected to the database. {"timestamp":"2024-10-17T10:16:10.568Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-17T10:17:19.208Z"}
info: Connected to the database. {"timestamp":"2024-10-17T10:17:19.278Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-17T10:18:05.410Z"}
info: Connected to the database. {"timestamp":"2024-10-17T10:18:05.511Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-17T10:18:34.951Z"}
info: Connected to the database. {"timestamp":"2024-10-17T10:18:35.042Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-17T10:19:31.067Z"}
info: Connected to the database. {"timestamp":"2024-10-17T10:19:31.140Z"}
error: 
    status - 500 
    message - ValidationError: "Email" must be a valid email 
    url - /api/v1/users/login 
    method - POST 
    IP - ::1
   {"timestamp":"2024-10-17T10:20:41.032Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-17T10:23:54.481Z"}
info: Connected to the database. {"timestamp":"2024-10-17T10:23:54.623Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-17T10:25:06.227Z"}
info: Connected to the database. {"timestamp":"2024-10-17T10:25:06.400Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-17T10:25:28.901Z"}
info: Connected to the database. {"timestamp":"2024-10-17T10:25:28.989Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-17T10:28:09.497Z"}
info: Connected to the database. {"timestamp":"2024-10-17T10:28:09.566Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-17T10:30:05.636Z"}
info: Connected to the database. {"timestamp":"2024-10-17T10:30:05.703Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-17T12:02:50.264Z"}
info: Connected to the database. {"timestamp":"2024-10-17T12:02:50.736Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-17T12:17:58.827Z"}
info: Connected to the database. {"timestamp":"2024-10-17T12:17:59.151Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-17T12:20:09.592Z"}
info: Connected to the database. {"timestamp":"2024-10-17T12:20:09.741Z"}
info: Server started at http://localhost:3000/api/v1/ {"timestamp":"2024-10-17T12:22:30.259Z"}
info: Connected to the database. {"timestamp":"2024-10-17T12:22:30.358Z"}
